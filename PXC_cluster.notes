-- setup 3 node PXC MySQL cluster with Maxscale loadbalancers on CentOS7

1/ prequisities, hosts, IPs, users:
- 3 centos7 servers for database nodes with basic OS installation and epel repo enabled
- 2 centos7 servers for loadbalancer nodes with basic OS installation and epel repo enabled
- in this manual we will have these servers with following IPs and users - example passwords:

10.0.0.1 - db1 ( database node 1 )
10.0.0.2 - db2 ( database node 2 )
10.0.0.3 - db3 ( database node 3 )
10.0.0.8 - lb1 ( database lodbalancer 1 )
10.0.0.9 - lb2 ( database lodbalancer 2 )
10.0.0.10 - lb vip ( virtual HA IP for application access )
192.168.1.11 - icewarp app 1
192.168.1.12 - icewarp app 2

root - rootpass ( mysql root user )
max - maxpass ( maxscale db balancer monitor user )
repuser - repuserpass ( db replication user )
iwdb - iwdbpass ( client application user )

2/ database node1 installation:
- update and install tools:
yum -y update
yum -y install vim nano wget rsync socat epel-release ntp

3/ generate rsa key for node:
ssh-keygen -t rsa

4/ enable ntpd
systemctl enable ntpd
systemctl start ntpd

5/ allow access between 10.0.0.1, 10.0.0.2, 10.0.0.3, ( database nodes ) dst 3306/tcp, 4567/tcp, 4567/udp, 4568/tcp, 4444/tcp on firewall;
   allow access from 10.0.0.8, 10.0.0.9, 10.0.0.10 ( db loadbalancers ) to 10.0.0.1, 10.0.0.2, 10.0.0.3, ( db nodes ) dst 3306/tcp on firewall;
   allow access from client application IPs (IceWarp) to 10.0.0.8, 10.0.0.9, 10.0.0.10, ( db loadbalancers ) dst 4008/tcp on firewall;

6/ setup OS limits
echo "vm.swappiness=0" >> /etc/sysctl.conf
sysctl -w vm.swappiness=0

echo "* soft nofile 4096" >> /etc/security/limits.conf
echo "* hard nofile 10240" >> /etc/security/limits.conf

sed -i s/^SELINUX=.*$/SELINUX=permissive/ /etc/selinux/config
setenforce 0

7/ remove potentially conflicting packages
yum -y remove mariadb* MariaDB* mysql* MySQL*

8/ install percona repository and packages
yum -y install http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm
yum -y install Percona-XtraDB-Cluster-57 percona-toolkit percona-xtrabackup-24

9/ configure /etc/my.cnf
#
# The Percona XtraDB Cluster 5.7 configuration file.
#
#
# * IMPORTANT: Additional settings that can override those from this file!
#   The files must end with '.cnf', otherwise they'll be ignored.
#   Please make any edits and changes to the appropriate sectional files
#   included below.
#
# !includedir /etc/my.cnf.d/
# !includedir /etc/percona-xtradb-cluster.conf.d/
[mysqld]
innodb_force_recovery = 0
pxc_strict_mode = PERMISSIVE
old_alter_table = ON
user=mysql
basedir=/usr/
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
pid_file=/var/lib/mysql/mysql.pid
port=3306
log_error=/var/log/mysql/mysqld.log
log_warnings=2
log_output = FILE
slow_query_log=1
log_queries_not_using_indexes=1
slow_query_log_file=/var/log/mysql/slow.log
long_query_time=1
### INNODB OPTIONS
innodb_buffer_pool_size=64G  ## change according to node memory size, free -m, set up to 85% of total physical memory of the node
innodb_flush_log_at_trx_commit=0
innodb_file_per_table=1
innodb_data_file_path = ibdata1:200M:autoextend
## You may want to tune the below depending on number of cores and disk sub
innodb_read_io_threads=8  ## set to number of node CPU cores
innodb_write_io_threads=8  ## set to number of node CPU cores
innodb_doublewrite=1
innodb_log_file_size=2048M
innodb_log_buffer_size=512M
innodb_buffer_pool_instances=64 ## same number as in "innodb_buffer_pool_size" recommended here
innodb_log_files_in_group=2
innodb_thread_concurrency=64 ## same number as in "innodb_buffer_pool_size" recommended here
# innodb_file_format = barracuda
innodb_flush_method = O_DIRECT
# innodb_locks_unsafe_for_binlog = 1
innodb_autoinc_lock_mode=2
## avoid statistics update when doing e.g show tables
innodb_stats_on_metadata=0
default_storage_engine=InnoDB
open-files-limit=331072

# CHARACTER SET
collation_server = utf8_general_ci ## set according to application language preferences
init_connect='SET NAMES utf8'
character_set_server = utf8

# REPLICATION SPECIFIC
server_id=1
binlog_format=ROW
log_bin=/cache/mysql/binlog
log_slave_updates=1
expire_logs_days=3
max_binlog_files=8
# relay_log = relay-bin

# OTHER THINGS, BUFFERS ETC
key_buffer_size = 24M
tmp_table_size = 64M
max_heap_table_size = 64M
max_allowed_packet = 1073741824
join_buffer_size = 32M
sort_buffer_size = 2M
read_buffer_size = 512K
read_rnd_buffer_size = 1M
# myisam_sort_buffer_size = 8M
skip_name_resolve
memlock=0
sysdate_is_now=1
max_connections=1601
max_connect_errors=300
thread_cache_size=1024
query_cache_type = 0
query_cache_size = 0
table_open_cache=2048
lower_case_table_names=1
#
binlog_cache_size=1048900
binlog_stmt_cache_size=1048900
table_definition_cache=10000
wait_timeout=93600
connect_timeout=30
net_read_timeout=180
net_write_timeout=360

# 5.6 backwards compatibility (FIXME)
# explicit_defaults_for_timestamp = 1
##
## WSREP options
##

performance_schema = ON
performance-schema-max-mutex-classes = 0
performance-schema-max-mutex-instances = 0

# Full path to wsrep provider library or 'none'
wsrep_provider=/usr/lib64/galera3/libgalera_smm.so
wsrep_on=ON
wsrep_node_address=10.0.0.1

# Provider specific configuration options
wsrep_provider_options="gcache.dir=/cache/mysql/;cert.log_conflicts=yes;gcache.size=12G;gcache.page_size=1G;gcs.fc_limit=256;gcs.fc_factor=0.99;gmcast.segment=0;"

# Logical cluster name. Should be the same for all nodes.
wsrep_cluster_name="Name your database cluster HERE"

# Group communication system handle
wsrep_cluster_address=gcomm://
#wsrep_cluster_address=gcomm://10.0.0.1:4567,10.0.0.2:4567,10.0.0.3:4567

# Human_readable node name (non-unique). Hostname by default.
wsrep_node_name=10.0.0.1

# Address for incoming client connections. Autodetect by default.
#wsrep_node_incoming_address=

# How many threads will process writesets from other nodes
wsrep_slave_threads=32

# DBUG options for wsrep provider
#wsrep_dbug_option

# Generate fake primary keys for non-PK tables (required for multi-master
# and parallel applying operation)
wsrep_certify_nonPK=1

# Location of the directory with data files. Needed for non-mysqldump
# state snapshot transfers. Defaults to mysql_real_data_home.
#wsrep_data_home_dir=

# Maximum number of rows in write set
wsrep_max_ws_rows=0

# Maximum size of write set
wsrep_max_ws_size=2G

# to enable debug level logging, set this to 1
wsrep_debug=0

# convert locking sessions into transactions
wsrep_convert_LOCK_to_trx=0

# how many times to retry deadlocked autocommits
wsrep_retry_autocommit=1

# change auto_increment_increment and auto_increment_offset automatically
wsrep_auto_increment_control=1

# replicate myisam
wsrep_replicate_myisam=0

# retry autoinc insert, which failed for duplicate key error
wsrep_drupal_282555_workaround=0

# enable "strictly synchronous" semantics for read operations
wsrep_causal_reads=0

# Command to call when node status or cluster membership changes.
# Will be passed all or some of the following options:
# --status  - new status of this node
# --uuid    - UUID of the cluster
# --primary - whether the component is primary or not ("yes"/"no")
# --members - comma-separated list of members
# --index   - index of this node in the list
#wsrep_notify_cmd=

##
## WSREP State Transfer options
##

# State Snapshot Transfer method
# ClusterControl currently DOES NOT support wsrep_sst_method=mysqldump
wsrep_sst_method=xtrabackup-v2

# Address on THIS node to receive SST at. DON'T SET IT TO DONOR ADDRESS!!!
# (SST method dependent. Defaults to the first IP of the first interface)
#wsrep_sst_receive_address=

# SST authentication string. This will be used to send SST to joining nodes.
# Depends on SST method. For mysqldump method it is root:<root password>
# IMPORTANT: The user/password in wsrep_sst_auth must match
# user/password in [xtrabackup]
wsrep_sst_auth=repuser:repuserpass

# Desired SST donor name.
#wsrep_sst_donor=

# Protocol version to use
# wsrep_protocol_version=

[MYSQL]
socket=/var/lib/mysql/mysql.sock
# default_character_set = utf8
[client]
socket=/var/lib/mysql/mysql.sock
# default_character_set = utf8

[mysqldump]
max_allowed_packet = 512M
# default_character_set = utf8
user=repuser
password=repuserpass

# IMPORTANT: The user/password in wsrep_sst_auth must match
# user/password in [xtrabackup]
[xtrabackup]
user=repuser
password=repuserpass
ssl=0

[MYSQLD_SAFE]
# log_error = /var/log/mysqld.log
basedir=/usr/
# datadir = /var/lib/mysql
### END OF my.cnf FILE ###

10/ bootstrap the cluster from the db1 node
mkdir -p /var/log/mysql
chown mysql:mysql /var/log/mysql
systemctl enable mysql
systemctl start mysql &
tail -f /var/log/mysql/mysqld.log

11/ get the starting root password, change the mysql root password, create grants for replication user
grep -i password /var/log/mysql/mysqld.log | tail -1
mysql -u root -p<password from the previous step>
alter user 'root'@'localhost' identified by 'rootpass';
grant all privileges on *.* to 'repuser'@'localhost' identified by 'repuserpass';
grant all privileges on *.* to 'repuser'@'127.0.0.1' identified by 'repuserpass';
flush privileges;
quit;
echo "[client]" >> /root/.my.cnf
echo "user=root" >> /root/.my.cnf
echo "password=rootpass" >> /root/.my.cnf

12/ create databases, grants for maxscale lb monitor user and application user
mysql

create database iwacc default charset utf8 collate utf8_general_ci; ( accounts )
create database iwasp default charset utf8 collate utf8_general_ci; ( antispam )
create database iwgrw default charset utf8 collate utf8_general_ci; ( groupware )
create database iwwc default charset utf8 collate utf8_general_ci;  ( webclient )
create database iweas default charset utf8 collate utf8_general_ci; ( activesync )
create database iwdc default charset utf8 collate utf8_bin;         ( directory cache )

create user 'max'@'10.0.0.8' identified by 'maxpass';
create user 'max'@'10.0.0.9' identified by 'maxpass';
create user 'max'@'10.0.0.10' identified by ',maxpass';
grant SELECT on mysql.user to 'max'@'10.0.0.8';
grant SELECT on mysql.user to 'max'@'10.0.0.9';
grant SELECT on mysql.user to 'max'@'10.0.0.10';
grant SELECT on mysql.db to 'max'@'10.0.0.8';
grant SELECT on mysql.db to 'max'@'10.0.0.9';
grant SELECT on mysql.db to 'max'@'10.0.0.10';
grant SELECT on mysql.tables_priv to 'max'@'10.0.0.8';
grant SELECT on mysql.tables_priv to 'max'@'10.0.0.9';
grant SELECT on mysql.tables_priv to 'max'@'10.0.0.10';
grant SHOW DATABASES ON *.* to 'max'@'10.0.0.8';
grant SHOW DATABASES ON *.* to 'max'@'10.0.0.9';
grant SHOW DATABASES ON *.* to 'max'@'10.0.0.10';
grant REPLICATION SLAVE on *.* to 'max'@'10.0.0.8';
grant REPLICATION SLAVE on *.* to 'max'@'10.0.0.9';
grant REPLICATION SLAVE on *.* to 'max'@'10.0.0.10';

grant all privileges on iwacc.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iwasp.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iwgrw.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iweas.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iwwc.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iwdc.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';

grant all privileges on iwacc.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iwasp.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iwgrw.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iweas.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iwwc.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';
grant all privileges on iwdc.* to 'iwdb'@'192.168.1.11' identified by 'iwdbpass';

grant all privileges on iwacc.* to 'iwdb'@'10.0.0.8' identified by 'iwdbpass';
grant all privileges on iwasp.* to 'iwdb'@'10.0.0.8' identified by 'iwdbpass';
grant all privileges on iwgrw.* to 'iwdb'@'10.0.0.8' identified by 'iwdbpass';
grant all privileges on iweas.* to 'iwdb'@'10.0.0.8' identified by 'iwdbpass';
grant all privileges on iwwc.* to 'iwdb'@'10.0.0.8' identified by 'iwdbpass';
grant all privileges on iwdc.* to 'iwdb'@'10.0.0.8' identified by 'iwdbpass';

grant all privileges on iwacc.* to 'iwdb'@'10.0.0.9' identified by 'iwdbpass';
grant all privileges on iwasp.* to 'iwdb'@'10.0.0.9' identified by 'iwdbpass';
grant all privileges on iwgrw.* to 'iwdb'@'10.0.0.9' identified by 'iwdbpass';
grant all privileges on iweas.* to 'iwdb'@'10.0.0.9' identified by 'iwdbpass';
grant all privileges on iwwc.* to 'iwdb'@'10.0.0.9' identified by 'iwdbpass';
grant all privileges on iwdc.* to 'iwdb'@'10.0.0.9' identified by 'iwdbpass';

flush privileges;
quit;

13/ continue with db2 node
- update and install tools:
yum -y update
yum -y install vim nano wget rsync socat epel-release ntp

14/ generate rsa key for node and exchange keys between db1 and db2 nodes:
ssh-keygen -t rsa
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.1
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.2
ssh root@10.0.0.1
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.1
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.2

15/ enable ntpd
systemctl enable ntpd
systemctl start ntpd

16/ allow access between 10.0.0.1, 10.0.0.2, 10.0.0.3, ( database nodes ) dst 3306/tcp, 4567/tcp, 4567/udp, 4568/tcp, 4444/tcp on firewall;
    allow access from 10.0.0.8, 10.0.0.9, 10.0.0.10 ( db loadbalancers ) to 10.0.0.1, 10.0.0.2, 10.0.0.3, ( db nodes ) dst 3306/tcp on firewall;
    allow access from client application IPs (IceWarp) to 10.0.0.8, 10.0.0.9, 10.0.0.10, ( db loadbalancers ) dst 4008/tcp on firewall;

17/ setup OS limits
echo "vm.swappiness=0" >> /etc/sysctl.conf
sysctl -w vm.swappiness=0

echo "* soft nofile 4096" >> /etc/security/limits.conf
echo "* hard nofile 10240" >> /etc/security/limits.conf

sed -i s/^SELINUX=.*$/SELINUX=permissive/ /etc/selinux/config
setenforce 0

18/ remove potentially conflicting packages
yum -y remove mariadb* MariaDB* mysql* MySQL*

19/ install percona repository and packages
yum -y install http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm
yum -y install Percona-XtraDB-Cluster-57 percona-toolkit percona-xtrabackup-24

20/ configure /etc/my.cnf
#
# The Percona XtraDB Cluster 5.7 configuration file.
#
#
# * IMPORTANT: Additional settings that can override those from this file!
#   The files must end with '.cnf', otherwise they'll be ignored.
#   Please make any edits and changes to the appropriate sectional files
#   included below.
#
# !includedir /etc/my.cnf.d/
# !includedir /etc/percona-xtradb-cluster.conf.d/
[mysqld]
innodb_force_recovery = 0
pxc_strict_mode = PERMISSIVE
old_alter_table = ON
user=mysql
basedir=/usr/
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
pid_file=/var/lib/mysql/mysql.pid
port=3306
log_error=/var/log/mysql/mysqld.log
log_warnings=2
log_output = FILE
slow_query_log=1
log_queries_not_using_indexes=1
slow_query_log_file=/var/log/mysql/slow.log
long_query_time=1
### INNODB OPTIONS
innodb_buffer_pool_size=64G  ## change according to node memory size, free -m, set up to 85% of total physical memory of the node
innodb_flush_log_at_trx_commit=0
innodb_file_per_table=1
innodb_data_file_path = ibdata1:200M:autoextend
## You may want to tune the below depending on number of cores and disk sub
innodb_read_io_threads=8  ## set to number of node CPU cores
innodb_write_io_threads=8  ## set to number of node CPU cores
innodb_doublewrite=1
innodb_log_file_size=2048M
innodb_log_buffer_size=512M
innodb_buffer_pool_instances=64 ## same number as in "innodb_buffer_pool_size" recommended here
innodb_log_files_in_group=2
innodb_thread_concurrency=64 ## same number as in "innodb_buffer_pool_size" recommended here
# innodb_file_format = barracuda
innodb_flush_method = O_DIRECT
# innodb_locks_unsafe_for_binlog = 1
innodb_autoinc_lock_mode=2
## avoid statistics update when doing e.g show tables
innodb_stats_on_metadata=0
default_storage_engine=InnoDB
open-files-limit=331072

# CHARACTER SET
collation_server = utf8_general_ci ## set according to application language preferences
init_connect='SET NAMES utf8'
character_set_server = utf8

# REPLICATION SPECIFIC
server_id=2
binlog_format=ROW
log_bin=/cache/mysql/binlog
log_slave_updates=1
expire_logs_days=3
max_binlog_files=8
# relay_log = relay-bin

# OTHER THINGS, BUFFERS ETC
key_buffer_size = 24M
tmp_table_size = 64M
max_heap_table_size = 64M
max_allowed_packet = 1073741824
join_buffer_size = 32M
sort_buffer_size = 2M
read_buffer_size = 512K
read_rnd_buffer_size = 1M
# myisam_sort_buffer_size = 8M
skip_name_resolve
memlock=0
sysdate_is_now=1
max_connections=1601
max_connect_errors=300
thread_cache_size=1024
query_cache_type = 0
query_cache_size = 0
table_open_cache=2048
lower_case_table_names=1
#
binlog_cache_size=1048900
binlog_stmt_cache_size=1048900
table_definition_cache=10000
wait_timeout=93600
connect_timeout=30
net_read_timeout=180
net_write_timeout=360

# 5.6 backwards compatibility (FIXME)
# explicit_defaults_for_timestamp = 1
##
## WSREP options
##

performance_schema = ON
performance-schema-max-mutex-classes = 0
performance-schema-max-mutex-instances = 0

# Full path to wsrep provider library or 'none'
wsrep_provider=/usr/lib64/galera3/libgalera_smm.so
wsrep_on=ON
wsrep_node_address=10.0.0.2

# Provider specific configuration options
wsrep_provider_options="gcache.dir=/cache/mysql/;cert.log_conflicts=yes;gcache.size=12G;gcache.page_size=1G;gcs.fc_limit=256;gcs.fc_factor=0.99;gmcast.segment=0;"

# Logical cluster name. Should be the same for all nodes.
wsrep_cluster_name="Name your database cluster HERE"

# Group communication system handle
#wsrep_cluster_address=gcomm://
wsrep_cluster_address=gcomm://10.0.0.1:4567,10.0.0.2:4567,10.0.0.3:4567

# Human_readable node name (non-unique). Hostname by default.
wsrep_node_name=10.0.0.2

# Address for incoming client connections. Autodetect by default.
#wsrep_node_incoming_address=

# How many threads will process writesets from other nodes
wsrep_slave_threads=32

# DBUG options for wsrep provider
#wsrep_dbug_option

# Generate fake primary keys for non-PK tables (required for multi-master
# and parallel applying operation)
wsrep_certify_nonPK=1

# Location of the directory with data files. Needed for non-mysqldump
# state snapshot transfers. Defaults to mysql_real_data_home.
#wsrep_data_home_dir=

# Maximum number of rows in write set
wsrep_max_ws_rows=0

# Maximum size of write set
wsrep_max_ws_size=2G

# to enable debug level logging, set this to 1
wsrep_debug=0

# convert locking sessions into transactions
wsrep_convert_LOCK_to_trx=0

# how many times to retry deadlocked autocommits
wsrep_retry_autocommit=1

# change auto_increment_increment and auto_increment_offset automatically
wsrep_auto_increment_control=1

# replicate myisam
wsrep_replicate_myisam=0

# retry autoinc insert, which failed for duplicate key error
wsrep_drupal_282555_workaround=0

# enable "strictly synchronous" semantics for read operations
wsrep_causal_reads=0

# Command to call when node status or cluster membership changes.
# Will be passed all or some of the following options:
# --status  - new status of this node
# --uuid    - UUID of the cluster
# --primary - whether the component is primary or not ("yes"/"no")
# --members - comma-separated list of members
# --index   - index of this node in the list
#wsrep_notify_cmd=

##
## WSREP State Transfer options
##

# State Snapshot Transfer method
# ClusterControl currently DOES NOT support wsrep_sst_method=mysqldump
wsrep_sst_method=xtrabackup-v2

# Address on THIS node to receive SST at. DON'T SET IT TO DONOR ADDRESS!!!
# (SST method dependent. Defaults to the first IP of the first interface)
#wsrep_sst_receive_address=

# SST authentication string. This will be used to send SST to joining nodes.
# Depends on SST method. For mysqldump method it is root:<root password>
# IMPORTANT: The user/password in wsrep_sst_auth must match
# user/password in [xtrabackup]
wsrep_sst_auth=repuser:repuserpass

# Desired SST donor name.
#wsrep_sst_donor=

# Protocol version to use
# wsrep_protocol_version=

[MYSQL]
socket=/var/lib/mysql/mysql.sock
# default_character_set = utf8
[client]
socket=/var/lib/mysql/mysql.sock
# default_character_set = utf8

[mysqldump]
max_allowed_packet = 512M
# default_character_set = utf8
user=repuser
password=repuserpass

# IMPORTANT: The user/password in wsrep_sst_auth must match
# user/password in [xtrabackup]
[xtrabackup]
user=repuser
password=repuserpass
ssl=0

[MYSQLD_SAFE]
# log_error = /var/log/mysqld.log
basedir=/usr/
# datadir = /var/lib/mysql
### END OF my.cnf FILE ###

21/ join db2 node to the cluster
mkdir -p /var/log/mysql
chown mysql:mysql /var/log/mysql
systemctl enable mysql
systemctl start mysql &
tail -f /var/log/mysql/mysqld.log

22/ once the db2 node is joined to the cluster, go back to the db1 node and change /etc/my.cnf
from
wsrep_cluster_address=gcomm://
#wsrep_cluster_address=gcomm://10.0.0.1:4567,10.0.0.2:4567,10.0.0.3:4567
to
#wsrep_cluster_address=gcomm://
wsrep_cluster_address=gcomm://10.0.0.1:4567,10.0.0.2:4567,10.0.0.3:4567

23/ continue with db3 node
- update and install tools:
yum -y update
yum -y install vim nano wget rsync socat epel-release ntp

24/ generate rsa key for node and exchange keys between db1 and db2 nodes:
ssh-keygen -t rsa
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.1
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.2
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.3
ssh root@10.0.0.1
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.1
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.2
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.3
ssh root@10.0.0.2
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.1
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.2
ssh-copy-id -i ~/.ssh/id_rsa.pub root@10.0.0.3

25/ enable ntpd
systemctl enable ntpd
systemctl start ntpd

26/ allow access between 10.0.0.1, 10.0.0.2, 10.0.0.3, ( database nodes ) dst 3306/tcp, 4567/tcp, 4567/udp, 4568/tcp, 4444/tcp on firewall;
    allow access from 10.0.0.8, 10.0.0.9, 10.0.0.10 ( db loadbalancers ) to 10.0.0.1, 10.0.0.2, 10.0.0.3, ( db nodes ) dst 3306/tcp on firewall;
    allow access from client application IPs (IceWarp) to 10.0.0.8, 10.0.0.9, 10.0.0.10, ( db loadbalancers ) dst 4008/tcp on firewall;

27/ setup OS limits, disable selinux
echo "vm.swappiness=0" >> /etc/sysctl.conf
sysctl -w vm.swappiness=0

echo "* soft nofile 4096" >> /etc/security/limits.conf
echo "* hard nofile 10240" >> /etc/security/limits.conf

sed -i s/^SELINUX=.*$/SELINUX=permissive/ /etc/selinux/config
setenforce 0

28/ remove potentially conflicting packages
yum -y remove mariadb* MariaDB* mysql* MySQL*

29/ install percona repository and packages
yum -y install http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm
yum -y install Percona-XtraDB-Cluster-57 percona-toolkit percona-xtrabackup-24

30/ configure /etc/my.cnf
#
# The Percona XtraDB Cluster 5.7 configuration file.
#
#
# * IMPORTANT: Additional settings that can override those from this file!
#   The files must end with '.cnf', otherwise they'll be ignored.
#   Please make any edits and changes to the appropriate sectional files
#   included below.
#
# !includedir /etc/my.cnf.d/
# !includedir /etc/percona-xtradb-cluster.conf.d/
[mysqld]
innodb_force_recovery = 0
pxc_strict_mode = PERMISSIVE
old_alter_table = ON
user=mysql
basedir=/usr/
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
pid_file=/var/lib/mysql/mysql.pid
port=3306
log_error=/var/log/mysql/mysqld.log
log_warnings=2
log_output = FILE
slow_query_log=1
log_queries_not_using_indexes=1
slow_query_log_file=/var/log/mysql/slow.log
long_query_time=1
### INNODB OPTIONS
innodb_buffer_pool_size=64G  ## change according to node memory size, free -m, set up to 85% of total physical memory of the node
innodb_flush_log_at_trx_commit=0
innodb_file_per_table=1
innodb_data_file_path = ibdata1:200M:autoextend
## You may want to tune the below depending on number of cores and disk sub
innodb_read_io_threads=8  ## set to number of node CPU cores
innodb_write_io_threads=8  ## set to number of node CPU cores
innodb_doublewrite=1
innodb_log_file_size=2048M
innodb_log_buffer_size=512M
innodb_buffer_pool_instances=64 ## same number as in "innodb_buffer_pool_size" recommended here
innodb_log_files_in_group=2
innodb_thread_concurrency=64 ## same number as in "innodb_buffer_pool_size" recommended here
# innodb_file_format = barracuda
innodb_flush_method = O_DIRECT
# innodb_locks_unsafe_for_binlog = 1
innodb_autoinc_lock_mode=2
## avoid statistics update when doing e.g show tables
innodb_stats_on_metadata=0
default_storage_engine=InnoDB
open-files-limit=331072

# CHARACTER SET
collation_server = utf8_general_ci ## set according to application language preferences
init_connect='SET NAMES utf8'
character_set_server = utf8

# REPLICATION SPECIFIC
server_id=3
binlog_format=ROW
log_bin=/cache/mysql/binlog
log_slave_updates=1
expire_logs_days=3
max_binlog_files=8
# relay_log = relay-bin

# OTHER THINGS, BUFFERS ETC
key_buffer_size = 24M
tmp_table_size = 64M
max_heap_table_size = 64M
max_allowed_packet = 1073741824
join_buffer_size = 32M
sort_buffer_size = 2M
read_buffer_size = 512K
read_rnd_buffer_size = 1M
# myisam_sort_buffer_size = 8M
skip_name_resolve
memlock=0
sysdate_is_now=1
max_connections=1601
max_connect_errors=300
thread_cache_size=1024
query_cache_type = 0
query_cache_size = 0
table_open_cache=2048
lower_case_table_names=1
#
binlog_cache_size=1048900
binlog_stmt_cache_size=1048900
table_definition_cache=10000
wait_timeout=93600
connect_timeout=30
net_read_timeout=180
net_write_timeout=360

# 5.6 backwards compatibility (FIXME)
# explicit_defaults_for_timestamp = 1
##
## WSREP options
##

performance_schema = ON
performance-schema-max-mutex-classes = 0
performance-schema-max-mutex-instances = 0

# Full path to wsrep provider library or 'none'
wsrep_provider=/usr/lib64/galera3/libgalera_smm.so
wsrep_on=ON
wsrep_node_address=10.0.0.3

# Provider specific configuration options
wsrep_provider_options="gcache.dir=/cache/mysql/;cert.log_conflicts=yes;gcache.size=12G;gcache.page_size=1G;gcs.fc_limit=256;gcs.fc_factor=0.99;gmcast.segment=0;"

# Logical cluster name. Should be the same for all nodes.
wsrep_cluster_name="Name your database cluster HERE"

# Group communication system handle
#wsrep_cluster_address=gcomm://
wsrep_cluster_address=gcomm://10.0.0.1:4567,10.0.0.2:4567,10.0.0.3:4567

# Human_readable node name (non-unique). Hostname by default.
wsrep_node_name=10.0.0.3

# Address for incoming client connections. Autodetect by default.
#wsrep_node_incoming_address=

# How many threads will process writesets from other nodes
wsrep_slave_threads=32

# DBUG options for wsrep provider
#wsrep_dbug_option

# Generate fake primary keys for non-PK tables (required for multi-master
# and parallel applying operation)
wsrep_certify_nonPK=1

# Location of the directory with data files. Needed for non-mysqldump
# state snapshot transfers. Defaults to mysql_real_data_home.
#wsrep_data_home_dir=

# Maximum number of rows in write set
wsrep_max_ws_rows=0

# Maximum size of write set
wsrep_max_ws_size=2G

# to enable debug level logging, set this to 1
wsrep_debug=0

# convert locking sessions into transactions
wsrep_convert_LOCK_to_trx=0

# how many times to retry deadlocked autocommits
wsrep_retry_autocommit=1

# change auto_increment_increment and auto_increment_offset automatically
wsrep_auto_increment_control=1

# replicate myisam
wsrep_replicate_myisam=0

# retry autoinc insert, which failed for duplicate key error
wsrep_drupal_282555_workaround=0

# enable "strictly synchronous" semantics for read operations
wsrep_causal_reads=0

# Command to call when node status or cluster membership changes.
# Will be passed all or some of the following options:
# --status  - new status of this node
# --uuid    - UUID of the cluster
# --primary - whether the component is primary or not ("yes"/"no")
# --members - comma-separated list of members
# --index   - index of this node in the list
#wsrep_notify_cmd=

##
## WSREP State Transfer options
##

# State Snapshot Transfer method
# ClusterControl currently DOES NOT support wsrep_sst_method=mysqldump
wsrep_sst_method=xtrabackup-v2

# Address on THIS node to receive SST at. DON'T SET IT TO DONOR ADDRESS!!!
# (SST method dependent. Defaults to the first IP of the first interface)
#wsrep_sst_receive_address=

# SST authentication string. This will be used to send SST to joining nodes.
# Depends on SST method. For mysqldump method it is root:<root password>
# IMPORTANT: The user/password in wsrep_sst_auth must match
# user/password in [xtrabackup]
wsrep_sst_auth=repuser:repuserpass

# Desired SST donor name.
#wsrep_sst_donor=

# Protocol version to use
# wsrep_protocol_version=

[MYSQL]
socket=/var/lib/mysql/mysql.sock
# default_character_set = utf8
[client]
socket=/var/lib/mysql/mysql.sock
# default_character_set = utf8

[mysqldump]
max_allowed_packet = 512M
# default_character_set = utf8
user=repuser
password=repuserpass

# IMPORTANT: The user/password in wsrep_sst_auth must match
# user/password in [xtrabackup]
[xtrabackup]
user=repuser
password=repuserpass
ssl=0

[MYSQLD_SAFE]
# log_error = /var/log/mysqld.log
basedir=/usr/
# datadir = /var/lib/mysql
### END OF my.cnf FILE ###

31/ join db3 node to the cluster
mkdir -p /var/log/mysql
chown mysql:mysql /var/log/mysql
systemctl enable mysql
systemctl start mysql &
tail -f /var/log/mysql/mysqld.log

32/ setup 1st db loadbalancer lb1
- update and install tools:
yum -y update
yum -y install vim nano wget rsync socat epel-release ntp

33/ allow vrrp on firewall
firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface "ens160" --destination 224.0.0.18 --protocol vrrp -j ACCEPT
firewall-cmd --direct --permanent --add-rule ipv4 filter OUTPUT 0 --out-interface "ens160" --destination 224.0.0.18 --protocol vrrp -j ACCEPT
firewall-cmd --reload

34/ allow nonlocal bind, disable selinux
echo "net.ipv4.ip_nonlocal_bind=1" >> /etc/sysctl.conf
sysctl -p
sed -i s/^SELINUX=.*$/SELINUX=permissive/ /etc/selinux/config
setenforce 0

35/ install maxscale and keepalived
curl -sS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash
yum -y install maxscale keepalived

36/ configure maxscale in /etc/maxscale.conf
[maxscale]
threads=2

[Galera Monitor]
type=monitor
module=galeramon
servers=db1,db2,db3
user=max
passwd=maxpass
monitor_interval=10000
disable_master_failback=1
available_when_donor=true

[qla]
type=filter
module=qlafilter
options=/tmp/QueryLog

[fetch]
type=filter
module=regexfilter
match=fetch
replace=select

[RW]
type=service
router=readwritesplit
servers=db1,db2,db3
user=max
passwd=maxpass
max_slave_connections=100%
router_options=slave_selection_criteria=LEAST_CURRENT_OPERATIONS

[RR]
type=service
router=readconnroute
router_options=synced
servers=db1,db2,db3
user=max
passwd=maxpass

[DebugInterface]
type=service
router=debugcli

[CLI]
type=service
router=cli

[RWlistener]
type=listener
service=RW
protocol=MySQLClient
address=10.0.0.10
port=4008

[RRlistener]
type=listener
service=RR
protocol=MySQLClient
address=10.0.0.10
port=4006

[Debug Listener]
type=listener
service=DebugInterface
protocol=telnetd
address=127.0.0.1
port=4442

[CLI Listener]
type=listener
service=CLI
protocol=maxscaled
address=127.0.0.1
port=6603

[db1]
type=server
address=10.0.0.1
port=3306
protocol=MySQLBackend

[db2]
type=server
address=10.0.0.2
port=3306
protocol=MySQLBackend

[db3]
type=server
address=10.0.0.3
port=3306
protocol=MySQLBackend
### END OF maxscale.conf FILE ###

37/ put the /usr/local/sbin/notify-keepalived.sh in place and make it executable
touch /usr/local/sbin/notify-keepalived.sh
chmod u+x /usr/local/sbin/notify-keepalived.sh
#!/bin/bash
TYPE=$1
NAME=$2
STATE=$3
case $STATE in
        "MASTER") /usr/sbin/service maxscale restart
                  ;;
        "BACKUP") /usr/sbin/service maxscale stop
                  ;;
        "FAULT")  /usr/sbin/service maxscale stop
                  exit 0
                  ;;
        *)        /sbin/logger "maxscale unknown state"
                  exit 1
                  ;;
esac

38/ start maxscale on lb1
systemctl enable maxscale
systemctl start maxscale
systemctl status maxscale

39/ configure keepalived on lb1 in /etc/keepalived/keepalived.conf
global_defs {

   notification_email {
       alert@targetdomain.ex
   }
   notification_email_from node_name@customer_location_etc
   smtp_server mail.icewarp.com_target_smtp_server
   smtp_connect_timeout 60
   router_id LVS_DEVEL
}

vrrp_script chk_maxscale
{
    script "killall -0 maxscale"
    interval 2
    weight 2
}

vrrp_instance VI_1
{
    interface eth0
    state MASTER
    virtual_router_id 51
    priority 110
    notify /usr/local/sbin/notify-keepalived.sh
    virtual_ipaddress
    {
        10.0.0.10
    }
    track_script
    {
        chk_maxscale
    }
}

40/ start keepalived
systemctl enable keepalived
systemctl start keepalived
systemctl status keepalived

41/ setup 2nd db loadbalancer lb2
- update and install tools:
yum -y update
yum -y install vim nano wget rsync socat epel-release ntp

42/ allow vrrp on firewall
firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface "eth0" --destination 224.0.0.18 --protocol vrrp -j ACCEPT
firewall-cmd --direct --permanent --add-rule ipv4 filter OUTPUT 0 --out-interface "eth0" --destination 224.0.0.18 --protocol vrrp -j ACCEPT
firewall-cmd --reload

43/ allow nonlocal bind, disable selinux
echo "net.ipv4.ip_nonlocal_bind=1" >> /etc/sysctl.conf
sysctl -p
sed -i s/^SELINUX=.*$/SELINUX=permissive/ /etc/selinux/config
setenforce 0

44/ install maxscale and keepalived
curl -sS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash
yum -y install maxscale keepalived

45/ configure maxscale in /etc/maxscale.conf
[maxscale]
threads=2

[Galera Monitor]
type=monitor
module=galeramon
servers=db1,db2,db3
user=max
passwd=maxpass
monitor_interval=10000
disable_master_failback=1
available_when_donor=true

[qla]
type=filter
module=qlafilter
options=/tmp/QueryLog

[fetch]
type=filter
module=regexfilter
match=fetch
replace=select

[RW]
type=service
router=readwritesplit
servers=db1,db2,db3
user=max
passwd=maxpass
max_slave_connections=100%
router_options=slave_selection_criteria=LEAST_CURRENT_OPERATIONS

[RR]
type=service
router=readconnroute
router_options=synced
servers=db1,db2,db3
user=max
passwd=maxpass

[DebugInterface]
type=service
router=debugcli

[CLI]
type=service
router=cli

[RWlistener]
type=listener
service=RW
protocol=MySQLClient
address=10.0.0.10
port=4008

[RRlistener]
type=listener
service=RR
protocol=MySQLClient
address=10.0.0.10
port=4006

[Debug Listener]
type=listener
service=DebugInterface
protocol=telnetd
address=127.0.0.1
port=4442

[CLI Listener]
type=listener
service=CLI
protocol=maxscaled
address=127.0.0.1
port=6603

[db1]
type=server
address=10.0.0.1
port=3306
protocol=MySQLBackend

[db2]
type=server
address=10.0.0.2
port=3306
protocol=MySQLBackend

[db3]
type=server
address=10.0.0.3
port=3306
protocol=MySQLBackend
### END OF maxscale.conf FILE ###

46/ put the /usr/local/sbin/notify-keepalived.sh in place and make it executable
touch /usr/local/sbin/notify-keepalived.sh
chmod u+x /usr/local/sbin/notify-keepalived.sh
#!/bin/bash
TYPE=$1
NAME=$2
STATE=$3
case $STATE in
        "MASTER") /usr/sbin/service maxscale restart
                  ;;
        "BACKUP") /usr/sbin/service maxscale stop
                  ;;
        "FAULT")  /usr/sbin/service maxscale stop
                  exit 0
                  ;;
        *)        /sbin/logger "maxscale unknown state"
                  exit 1
                  ;;
esac

47/ start maxscale on lb2
systemctl enable maxscale
systemctl start maxscale
systemctl status maxscale

48/ configure keepalived on lb2 in /etc/keepalived/keepalived.conf
global_defs {

   notification_email {
       alert@targetdomain.ex
   }
   notification_email_from node_name@customer_location_etc
   smtp_server mail.icewarp.com_target_smtp_server
   smtp_connect_timeout 60
   router_id LVS_DEVEL
}

vrrp_script chk_maxscale
{
    script "killall -0 maxscale"
    interval 2
    weight 2
}

vrrp_instance VI_1
{
    interface eth0
    state SLAVE
    virtual_router_id 51
    priority 90
    notify /usr/local/sbin/notify-keepalived.sh
    virtual_ipaddress
    {
        10.0.0.10
    }
    track_script
    {
        chk_maxscale
    }
}

49/ start keepalived
systemctl enable keepalived
systemctl start keepalived
systemctl status keepalived

50/ all done, you should be able to login from 192.168.1.11 and 192.168.1.12 to the db cluster via loadbalancer virtual IP 10.0.0.10
mysql -u iwdb -piwdbpass -h 10.0.0.10 -P 4008
show databases;
